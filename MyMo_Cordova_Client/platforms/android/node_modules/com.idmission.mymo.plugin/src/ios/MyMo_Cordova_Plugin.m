/********* MyMo_Cordova_Plugin.m Cordova Plugin Implementation *******/

#import <Cordova/CDV.h>

@interface MyMo_Cordova_Plugin : CDVPlugin {
  // Member variables go here.
}

- (void)coolMethod:(CDVInvokedUrlCommand*)command;
- (void)enableMyMoInSettings:(CDVInvokedUrlCommand*)command;
- (void)selectKeyboardOptions:(CDVInvokedUrlCommand*)command;
- (void)showKeyboard:(CDVInvokedUrlCommand*)command;
- (void)hideKeyboard:(CDVInvokedUrlCommand*)command;
- (void)enableMyMoToAllowSendMoney:(CDVInvokedUrlCommand*)command;
- (void)disableMyMoToRestrictSendMoney:(CDVInvokedUrlCommand*)command;
@end

@implementation MyMo_Cordova_Plugin

- (void)coolMethod:(CDVInvokedUrlCommand*)command
{
    CDVPluginResult* pluginResult = nil;
    NSString* echo = [command.arguments objectAtIndex:0];

    if (echo != nil && [echo length] > 0) {
        pluginResult = [CDVPluginResult resultWithStatus:CDVCommandStatus_OK messageAsString:echo];
    } else {
        pluginResult = [CDVPluginResult resultWithStatus:CDVCommandStatus_ERROR];
    }

    [self.commandDelegate sendPluginResult:pluginResult callbackId:command.callbackId];
}

- (void)enableMyMoInSettings:(CDVInvokedUrlCommand*)command
{
    NSLog(@"MyMo_Cordova_Plugin.m enableMyMoInSettings");
    NSURL *keboardURL = [NSURL URLWithString: @"App-Prefs:root=General&path=Keyboard/KEYBOARDS"];
    [[UIApplication sharedApplication] openURL:keboardURL];
}

- (void)selectKeyboardOptions:(CDVInvokedUrlCommand*)command
{
    NSLog(@"MyMo_Cordova_Plugin.m selectKeyboardOptions");
}

- (void)showKeyboard:(CDVInvokedUrlCommand*)command
{
    NSLog(@"MyMo_Cordova_Plugin.m showKeyboard");
}

- (void)hideKeyboard:(CDVInvokedUrlCommand*)command
{
    NSLog(@"MyMo_Cordova_Plugin.m hideKeyboard");
}

- (void)enableMyMoToAllowSendMoney:(CDVInvokedUrlCommand*)command
{
    NSLog(@"MyMo_Cordova_Plugin.m enableMyMoToAllowSendMoney");
    NSDictionary* commandJsonString = [command.arguments objectAtIndex:0];

    NSString *bnkAcc = [commandJsonString objectForKey:@"bnkAcc"];
    NSString *branchCode = [commandJsonString objectForKey:@"branchCode"];
    NSString *bnkType = [commandJsonString objectForKey:@"banksdropdown"];
    NSString *countryCode = [commandJsonString objectForKey:@"countryCode"];
    NSString *currencyCode = [commandJsonString objectForKey:@"currencyCode"];
    NSString *currencySymbol = [commandJsonString objectForKey:@"currencySymbol"];
    NSString *custCode = [commandJsonString objectForKey:@"custCode"];
    NSString *locale = [commandJsonString objectForKey:@"locale"];
    NSString *loginId = [commandJsonString objectForKey:@"loginId"];
    NSString *maxAmt = [commandJsonString objectForKey:@"maxAmt"];
    NSString *merchantId = [commandJsonString objectForKey:@"merchantId"];
    NSString *minAmt = [commandJsonString objectForKey:@"minAmt"];
    NSString *password = [commandJsonString objectForKey:@"password"];
    NSString *phNo = [commandJsonString objectForKey:@"phNo"];
    NSString *postURL = [commandJsonString objectForKey:@"postURL"];
    NSString *recPhoneSecurity = [commandJsonString objectForKey:@"recPhoneSecurity"];
    NSString *recPhoneLength = [commandJsonString objectForKey:@"phoneLength"];
    NSString *txnSecurity = [commandJsonString objectForKey:@"txnSecurity"];
    NSString *txnSecurityPin = [commandJsonString objectForKey:@"txnSecurityPin"];
    NSString *PinValidateAtIDM = [commandJsonString objectForKey:@"PinValidateAtIDM"];
    NSString *customerSecurityPin = [commandJsonString objectForKey:@"customerSecurityPin"];
    NSString *senderName = [commandJsonString objectForKey:@"senderName"];
    NSString *hexColor_HeaderBackground = [commandJsonString objectForKey:@"headerBackgroundColor"];
    NSString *hexColor_AmountText = [commandJsonString objectForKey:@"textColor"];
    NSString *hexColor_AmountBackground = [commandJsonString objectForKey:@"editBoxBackClr"];
    NSString *HexColor_SuccessMessage = [commandJsonString objectForKey:@"txnSuccessTxtClr"];
    NSString *HexColor_AlerMessage = [commandJsonString objectForKey:@"alertTxtClr"];
    NSString *HexColor_HistoryList_Header = [commandJsonString objectForKey:@"histHeaderBackClr"];
    NSString *HexColor_ConfirmTransaction_CofirmButton = [commandJsonString objectForKey:@"confirmTxnYesBtnClr"];
    NSString *HexColor_ConfirmTransaction_CancelButton = [commandJsonString objectForKey:@"confirmTxnNoBtnClr"];
    NSString *HexColor_CancelTransaction_CancelTransactionButton = [commandJsonString objectForKey:@"confirmCancelTxnBtnClr"];
    NSString *HexColor_CancelTransaction_CloseButton = [commandJsonString objectForKey:@"closeBtnClr"];
    NSString *HexColor_CancelTransactionConfirmation_YESButton = [commandJsonString objectForKey:@"confirmCancelYesBtnClr"];
    NSString *HexColor_CancelTransactionConfirmation_NOButton = [commandJsonString objectForKey:@"confirmCancelNoBtnClr"];
    NSString *HexColor_Calendar_SelectDateButton = [commandJsonString objectForKey:@"confirmCancelYesBtnClr"];
    NSString *HexColor_Calendar_CancelButton = [commandJsonString objectForKey:@"confirmCancelNoBtnClr"];

    // Convert Base64 data Into UIImage.
    NSString* mymoIconImg_base64 = [commandJsonString objectForKey:@"mymoIconImg"];
    NSString *mymoIconImgPath = @"";
    if (![mymoIconImg_base64 isEqualToString:@""]) {
        UIImage *mymoIconImg = [self getImageFrombase64String:mymoIconImg_base64 imageName:@"mymoIconImg"];
        mymoIconImgPath = [self getImagepath_BystoringImageFile_WithName:@"mymoIconImg" imageData:UIImageJPEGRepresentation(mymoIconImg, 0.5)];
    }

    NSString* sendMoneyIcon_base64 = [commandJsonString objectForKey:@"sendMoneyIcon"];
    NSString *sendMoneyIconPath = @"";
    if (![sendMoneyIcon_base64 isEqualToString:@""]) {
        UIImage *sendMoneyIcon = [self getImageFrombase64String:sendMoneyIcon_base64 imageName:@"sendMoneyIcon"];
        sendMoneyIconPath = [self getImagepath_BystoringImageFile_WithName:@"sendMoneyIcon" imageData:UIImagePNGRepresentation(sendMoneyIcon)];
    }

    NSString* atmIcon_base64 = [commandJsonString objectForKey:@"atmIcon"];
    NSString *atmIconPath = @"";
    if (![atmIcon_base64 isEqualToString:@""]) {
        UIImage *atmIcon = [self getImageFrombase64String:atmIcon_base64 imageName:@"atmIcon"];
        atmIconPath = [self getImagepath_BystoringImageFile_WithName:@"atmIcon" imageData:UIImagePNGRepresentation(atmIcon)];
    }

    NSString* histIcon_base64 = [commandJsonString objectForKey:@"histIcon"];
    NSString *histIconPath = @"";
    if (![histIcon_base64 isEqualToString:@""]) {
        UIImage *histIcon = [self getImageFrombase64String:histIcon_base64 imageName:@"histIcon"];
        histIconPath = [self getImagepath_BystoringImageFile_WithName:@"histIcon" imageData:UIImagePNGRepresentation(histIcon)];
    }

    NSString* payIcon_base64 = [commandJsonString objectForKey:@"payIcon"];
    NSString *payIconPath = @"";
    if (![payIcon_base64 isEqualToString:@""]) {
        UIImage *payIcon = [self getImageFrombase64String:payIcon_base64 imageName:@"payIcon"];
        payIconPath = [self getImagepath_BystoringImageFile_WithName:@"payIcon" imageData:UIImagePNGRepresentation(payIcon)];
    }

    NSString* arrowIcon_base64 = [commandJsonString objectForKey:@"arrowIcon"];
    NSString *arrowIconPath = @"";
    if (![arrowIcon_base64 isEqualToString:@""]) {
        UIImage *arrowIcon = [self getImageFrombase64String:arrowIcon_base64 imageName:@"arrowIcon"];
        arrowIconPath = [self getImagepath_BystoringImageFile_WithName:@"arrowIcon" imageData:UIImagePNGRepresentation(arrowIcon)];
    }

    NSString* contactIcon_base64 = [commandJsonString objectForKey:@"contactIcon"];
    NSString *contactIconPath = @"";
    if (![contactIcon_base64 isEqualToString:@""]) {
        UIImage *arrowIcon = [self getImageFrombase64String:contactIcon_base64 imageName:@"contactIcon"];
        contactIconPath = [self getImagepath_BystoringImageFile_WithName:@"contactIcon" imageData:UIImagePNGRepresentation(arrowIcon)];
    }

    NSString* processingIcon_base64 = [commandJsonString objectForKey:@"processingIcon"];
    NSString *processingIconPath = @"";
    if (![processingIcon_base64 isEqualToString:@""]) {
        UIImage *arrowIcon = [self getImageFrombase64String:processingIcon_base64 imageName:@"processingIcon"];
        processingIconPath = [self getImagepath_BystoringImageFile_WithName:@"processingIcon" imageData:UIImagePNGRepresentation(arrowIcon)];
    }

    NSString* successIcon_base64 = [commandJsonString objectForKey:@"txnSuccessIcon"];
    NSString *successIconPath = @"";
    if (![successIcon_base64 isEqualToString:@""]) {
        UIImage *arrowIcon = [self getImageFrombase64String:successIcon_base64 imageName:@"txnSuccessIcon"];
        successIconPath = [self getImagepath_BystoringImageFile_WithName:@"txnSuccessIcon" imageData:UIImagePNGRepresentation(arrowIcon)];
    }

    NSString* errorIcon_base64 = [commandJsonString objectForKey:@"alertIcon"];
    NSString *errorIconPath = @"";
    if (![errorIcon_base64 isEqualToString:@""]) {
        UIImage *arrowIcon = [self getImageFrombase64String:errorIcon_base64 imageName:@"alertIcon"];
        errorIconPath = [self getImagepath_BystoringImageFile_WithName:@"alertIcon" imageData:UIImagePNGRepresentation(arrowIcon)];
    }

    NSUserDefaults *userDefaults = [[NSUserDefaults alloc] initWithSuiteName:@"group.idmission.mymo"];
    [userDefaults setObject:@"Y" forKey:@"Enable_MyMO"];
    [userDefaults setObject:@"CUX" forKey:@"Application_Code"];
    [userDefaults setObject:senderName forKey:@"Sender_Name"];
    [userDefaults setObject:loginId forKey:@"Login_Id"];
    [userDefaults setObject:password forKey:@"Login_Password"];
    [userDefaults setObject:merchantId forKey:@"Merchant_Id"];
    [userDefaults setObject:phNo forKey:@"Phone_Number"];
    [userDefaults setObject:custCode forKey:@"Customer_Code"];
    [userDefaults setObject:countryCode forKey:@"Country_Code"];
    [userDefaults setObject:currencyCode forKey:@"Currency_Code"];
    [userDefaults setObject:currencySymbol forKey:@"Currency_Symbol"];
    [userDefaults setObject:minAmt forKey:@"Minimum_Amount"];
    [userDefaults setObject:maxAmt forKey:@"Maximum_Amount"];
    [userDefaults setObject:locale forKey:@"Language_Code"];
    [userDefaults setObject:postURL forKey:@"Url"];
    [userDefaults setObject:branchCode forKey:@"Bank_Branch_Code"];
    [userDefaults setObject:bnkAcc forKey:@"Bank_Account_No"];
    [userDefaults setObject:bnkType forKey:@"Bank_Account_Type"];
    [userDefaults setObject:recPhoneSecurity forKey:@"PhoneNo_Security_Required"];
    [userDefaults setObject:recPhoneLength forKey:@"Phone_Number_Length"];
    [userDefaults setObject:txnSecurity forKey:@"OTP_Security_Required"];
    [userDefaults setObject:txnSecurityPin forKey:@"PIN_Security_Required"];
    [userDefaults setObject:PinValidateAtIDM forKey:@"PIN_Validate_At"];
    [userDefaults setObject:customerSecurityPin forKey:@"Customer_Security_PIN"];

    [userDefaults setObject:mymoIconImgPath forKey:@"ImagePath_For_BankLogo"];
    [userDefaults setObject:sendMoneyIconPath forKey:@"ImagePath_For_SendMoney"];
    [userDefaults setObject:atmIconPath forKey:@"ImagePath_For_SendToATM"];
    [userDefaults setObject:histIconPath forKey:@"ImagePath_For_History"];
    [userDefaults setObject:payIconPath forKey:@"ImagePath_For_Send"];
    [userDefaults setObject:arrowIconPath forKey:@"ImagePath_For_SelectionArrow"];
    [userDefaults setObject:contactIconPath forKey:@"ImagePath_For_Contact"];
    [userDefaults setObject:processingIconPath forKey:@"ImagePath_For_Processing"];
    [userDefaults setObject:successIconPath forKey:@"ImagePath_For_TransactionSuccess"];
    [userDefaults setObject:errorIconPath forKey:@"ImagePath_For_ErrorAlert"];

    [userDefaults setObject:hexColor_HeaderBackground forKey:@"HexColor_For_Header_Background"];
    [userDefaults setObject:hexColor_AmountText forKey:@"HexColor_For_AmountText"];
    [userDefaults setObject:hexColor_AmountBackground forKey:@"HexColor_For_AmountBackgroundColor"];
    [userDefaults setObject:HexColor_SuccessMessage forKey:@"HexColor_For_SuccessMessage"];
    [userDefaults setObject:HexColor_AlerMessage forKey:@"HexColor_For_AlerMessage"];
    [userDefaults setObject:HexColor_HistoryList_Header forKey:@"HexColor_For_HistoryList_Header"];
    [userDefaults setObject:HexColor_ConfirmTransaction_CofirmButton forKey:@"HexColor_For_ConfirmTransaction_CofirmButton"];
    [userDefaults setObject:HexColor_ConfirmTransaction_CancelButton forKey:@"HexColor_For_ConfirmTransaction_CancelButton"];
    [userDefaults setObject:HexColor_CancelTransaction_CancelTransactionButton forKey:@"HexColor_For_CancelTransaction_CancelTransactionButton"];
    [userDefaults setObject:HexColor_CancelTransaction_CloseButton forKey:@"HexColor_For_CancelTransaction_CloseButton"];
    [userDefaults setObject:HexColor_CancelTransactionConfirmation_YESButton forKey:@"HexColor_For_CancelTransactionConfirmation_YESButton"];
    [userDefaults setObject:HexColor_CancelTransactionConfirmation_NOButton forKey:@"HexColor_For_CancelTransactionConfirmation_NOButton"];
    [userDefaults setObject:HexColor_Calendar_SelectDateButton forKey:@"HexColor_For_Calendar_SelectDateButton"];
    [userDefaults setObject:HexColor_Calendar_CancelButton forKey:@"HexColor_For_Calendar_CancelButton"];

//    [userDefaults setObject:someObject forKey:@"Email_Security_Required"];
//    [userDefaults setObject:someObject forKey:@"Face_Security_Required"];

}

- (void)disableMyMoToRestrictSendMoney:(CDVInvokedUrlCommand*)command
{
    NSLog(@"MyMo_Cordova_Plugin.m disableMyMoToRestrictSendMoney");

    NSUserDefaults *userDefaults = [[NSUserDefaults alloc] initWithSuiteName:@"group.idmission.mymo"];
    [userDefaults setObject:@"N" forKey:@"Enable_MyMO"];
}

-(UIImage*)getImageFrombase64String:(NSString*)base64String imageName:(NSString*)imgName {
    base64String = [base64String stringByReplacingOccurrencesOfString:@"data:image/png;base64," withString:@""];
    base64String = [base64String stringByReplacingOccurrencesOfString:@"data:image/jpeg;base64," withString:@""];
    NSData* data = [[NSData alloc] initWithBase64EncodedString:base64String options:0];
    UIImage* image = [UIImage imageWithData:data];
    if ([imgName isEqualToString:@"arrowIcon"]) {
        UIImage* scaleImage = [self scaleToSize:CGSizeMake(20, 10) image:image];
        return scaleImage;
    } else if ([imgName isEqualToString:@"mymoIconImg"] || [imgName isEqualToString:@"contactIcon"]) {
        UIImage* scaleImage = [self scaleToSize:CGSizeMake(36, 36) image:image];
        return scaleImage;
        } else if ([imgName isEqualToString:@"txnSuccessIcon"] || [imgName isEqualToString:@"alertIcon"]) {
        UIImage* scaleImage = [self scaleToSize:CGSizeMake(50, 50) image:image];
        return scaleImage;
    } else if ([imgName isEqualToString:@"processingIcon"]) {
        UIImage* scaleImage = [self scaleToSize:CGSizeMake(80, 80) image:image];
        return scaleImage;
    } else {
        UIImage* scaleImage = [self scaleToSize:CGSizeMake(100, 40) image:image];
        return scaleImage;
    }
}

- (NSString*)getImagepath_BystoringImageFile_WithName:(NSString*)filename imageData:(NSData*)imagePNGdata {

    NSURL *documentURL = [[NSFileManager defaultManager] containerURLForSecurityApplicationGroupIdentifier:@"group.idmission.mymo"];
    documentURL = [documentURL URLByAppendingPathComponent:[NSString stringWithFormat:@"%@", [filename stringByAppendingFormat:@".png"]]];

    // Write file to Group Container
    [[NSFileManager defaultManager] createFileAtPath:[documentURL path] contents:imagePNGdata attributes:nil];

    // Return Image Path
    return [documentURL absoluteString];
}

-(UIImage*)scaleToSize:(CGSize)size image:(UIImage*)imageToScale
{
  // Create a bitmap graphics context
  // This will also set it as the current context
  UIGraphicsBeginImageContext(size);

  // Draw the scaled image in the current context
  [imageToScale drawInRect:CGRectMake(0, 0, size.width, size.height)];

  // Create a new image from current context
  UIImage* scaledImage = UIGraphicsGetImageFromCurrentImageContext();

  // Pop the current context from the stack
  UIGraphicsEndImageContext();

  // Return our new scaled image
  return scaledImage;
}

@end
